version: '3.8'

services:
  # ==========================================
  # Ambiente de Desenvolvimento
  # ==========================================
  mfe-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "5173:5173"  # Shell
      - "5174:5174"  # Auth MFE
      - "5175:5175"  # Clients MFE
      - "5176:5176"  # Design System
    volumes:
      - .:/app
      - /app/node_modules
      - /app/packages/shell/node_modules
      - /app/packages/auth-mfe/node_modules
      - /app/packages/clients-mfe/node_modules
      - /app/packages/design-system/node_modules
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
    command: npm run dev
    networks:
      - mfe-network

  # ==========================================
  # Ambiente de Produção
  # ==========================================
  
  # Shell (Host Principal)
  shell:
    build:
      context: .
      dockerfile: Dockerfile
      target: shell-prod
    ports:
      - "80:80"
    depends_on:
      - auth-mfe
      - clients-mfe
      - design-system
    networks:
      - mfe-network
    restart: unless-stopped

  # Auth MFE
  auth-mfe:
    build:
      context: .
      dockerfile: Dockerfile
      target: auth-mfe-prod
    ports:
      - "8174:80"
    networks:
      - mfe-network
    restart: unless-stopped

  # Clients MFE
  clients-mfe:
    build:
      context: .
      dockerfile: Dockerfile
      target: clients-mfe-prod
    ports:
      - "8175:80"
    networks:
      - mfe-network
    restart: unless-stopped

  # Design System
  design-system:
    build:
      context: .
      dockerfile: Dockerfile
      target: design-system-prod
    ports:
      - "8176:80"
    networks:
      - mfe-network
    restart: unless-stopped

  # ==========================================
  # Serviços de Testes
  # ==========================================
  
  # Testes E2E com Playwright
  e2e-tests:
    build:
      context: .
      dockerfile: docker/Dockerfile.tests
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=test
      - PLAYWRIGHT_BROWSERS_PATH=/app/.playwright
    depends_on:
      - shell
      - auth-mfe
      - clients-mfe
      - design-system
    networks:
      - mfe-network
    profiles:
      - test

  # Testes Unitários
  unit-tests:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=test
    command: npm run test:unit
    networks:
      - mfe-network
    profiles:
      - test

  # ==========================================
  # Proxy Reverso para Produção
  # ==========================================
  
  # Nginx Proxy para roteamento
  proxy:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile.proxy
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - shell
      - auth-mfe
      - clients-mfe
      - design-system
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/ssl/certs  # Para certificados SSL se necessário
    networks:
      - mfe-network
    restart: unless-stopped
    profiles:
      - production

  # ==========================================
  # Monitoramento e Logs
  # ==========================================
  
  # Container para coleta de logs (opcional)
  log-collector:
    image: fluentd:latest
    volumes:
      - ./docker/fluentd:/fluentd/etc
      - ./logs:/var/log
    networks:
      - mfe-network
    profiles:
      - monitoring

networks:
  mfe-network:
    driver: bridge

volumes:
  node_modules:
  playwright_browsers: